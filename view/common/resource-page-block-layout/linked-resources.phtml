<?php
// //les classes sont regroupées par catégories puisque omeka-s ne propose pas de gérer l'héritage de classes
// //j'ai choisi de réunir par classes plus que par propriété car par exemple la classe "acquisition" pourra être montré sur une fiche E22HMO et une fiche E21Person; 
// $displayedEventsMapping = array(
//     'Production' => array('crm:E12_Production',),
//     'Modification' => array('crm:E11_Modification', 'crm:E79_Part_Addition', 'crm:E80_Part_Removal'),
//     'Acquisition' => array('crm:E8_Acquisition', 'crm:E96_Purchase', 'crm:E10_Transfer_of_Custody'),
// );
// //mapping of class id with categories
// $eventClassId2categ = array();
// foreach($displayedEventsMapping as $eventCategory=>$eventClassTermArray){
//     foreach($eventClassTermArray as $eventClassTerm){
//         $eventClassId = $this->api()->searchOne('resource_classes', ['term'=>$eventClassTerm])->getContent()->id();
//         $eventClassId2categ[$eventClassId] = $eventCategory;
//     }
// };


// $skippedPropsList = array('rdfs:seeAlso', );
// $skippedPropsIdList = array();
// foreach($skippedPropsList as $skipedPropTerm){
//     $skippedPropId = $this->api()->searchOne('properties', ['term'=>$skipedPropTerm])->getContent()->id();
//     $skippedPropsIdList[] = $skippedPropId;
// };

// $foundEvents = array();
// $otherLinkedItems = array();



// //this finds the linked resources and order them by date (time_span)
// $i=0;
// $j=0;
// $maxTerm = 20;
// $max_itemPerTerm = 8;
// //todo: fetch third degree items for object <- (production -> designOrProcedure) <- creation  
// foreach ($resource->subjectValues() as $index => $subjectValues) {
//     if(++$i > $maxTerm) break;//max terms analyzed
//     $termID = explode('-',$index)[0];
//     if (!in_array($termID, $skippedPropsIdList)){//the prop is not among the forbidden ones
//         foreach ($subjectValues as $subjectValue) {
//             if(++$j > $max_itemPerTerm) break;//max item analyzed per term
//             // $this->logger()->info(json_encode($subjectValue['val']->resource()));
//             $subjectResource = $subjectValue['val']->resource();
//             if ($subjectResource->getControllerName($subjectResource) === 'item'){//if the linked item is not a media (through RightsHolder property)
//                 $subjectResourceClassId = $subjectResource->resourceClass()->id();
//                 $datelit = $subjectResource->value('crm:P4_has_time-span', ['literal']);
//                 preg_match('/\d\d\d\d?/', $datelit, $date);
//                 $dateindex = 100*$date[0];// ex: 194400 for 1944
//                 if (in_array($subjectResourceClassId, array_keys($eventClassId2categ))){
//                     while (key_exists($dateindex, $foundEvents)) {++$dateindex; };//if key allready in use (same date); then go to next index (194401 for example)
//                     $foundEvents[$dateindex] = $subjectResource;
//                 } else {
//                     while (key_exists($dateindex, $otherLinkedItems)) {++$dateindex; };
//                     $otherLinkedItems[$dateindex] = $subjectResource;
//                 };
//             }
            
//         };
//     }  
// };
// ksort($foundEvents);
// ksort($otherLinkedItems);

[$foundEvents, $otherLinkedItems] = $this->SortLinkedResources($resource);

function writeEvent($event, $viewFile=null) {
    global $eventClassId2categ;
    global $logger;
    $eventClass = $event->resourceClass();
    if (!isset($eventClass)){
        //$logger->info("no class found for this item (event): {$event->id()}");//TODO fix "Error: Using $this when not in object context"
        //TODO ecrire quelque chose dans la vue pour qu'on s'enn rende compte
        return;
    }
    $eventClassId = $event->resourceClass()->id();
    $eventURL = $event->url();
    $displayString = (key_exists($eventClassId, $eventClassId2categ)) ? $eventClassId2categ[$eventClassId] : $event->resourceClass()->label();
    ?>
    <div class="bloco">
        <?php
        echo sprintf('<h3><a href=%s>%s</a></h3>', $eventURL, $displayString);
        echo $viewFile ? $event->displayValues(array('viewName' => $viewFile,)) : $event->displayValues();
        ?>
    </div>
    <?php
};
?>

<!-- subject values printing -->
<div id="linked-events" >
    <div class="columnTitle">
        Évenements liés à cet item
    </div>

    <?php if (!$foundEvents): ?>
        <div class="bloco" style= "display: flex;  align-items: center;">
            <img src = "https://upload.wikimedia.org/wikipedia/commons/8/8f/Flat_cross_icon.svg" alt="Nothing" style="height: 2rem; margin: 0 1rem"/> 
            <span>Aucun évènement trouvé</span>
        </div>
    <?php else: ?>
        <?php 
        $itemClass = $resource->resourceClass()->term();

        switch ($itemClass) {
            case 'crm:E22_Human-Made_Object': $viewFile = 'common/resource-values_event-in-item'; break;
            case 'crm:E21_Person':
            case 'crm:E39_Actor':
            case 'crm:E74_Group': $viewFile = 'common/resource-values_event-in-item'; break;
            default : $viewFile = 'common/resource-values_event-in-item';
        };

        foreach ($foundEvents as $event) {
            writeEvent($event, $viewFile);
        };        
        ?>
    <?php endif; ?>
</div>


<div id="other-linked-items" >
<div class="columnTitle">
        Autres éléments associés à cet item
    </div>
    <?php if (!$otherLinkedItems): ?>
        <div class="bloco" style= "display: flex;  align-items: center;">
            <img src = "https://upload.wikimedia.org/wikipedia/commons/8/8f/Flat_cross_icon.svg" alt="Nothing" style="height: 2rem; margin: 0 1rem"/> 
            <span>Aucun autre élément associé trouvé</span>
        </div>
    <?php else: ?>
        <div id="other-linked-items" >
            <?php 
            foreach ($otherLinkedItems as $item) {
                writeEvent($item);
            };
            ?>
    <?php endif; ?>
</div>
